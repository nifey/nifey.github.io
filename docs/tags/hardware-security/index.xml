<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hardware-Security on Nihaal</title>
    <link>https://nihaal.me/tags/hardware-security/</link>
    <description>Recent content in Hardware-Security on Nihaal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Dec 2022 11:17:59 +0530</lastBuildDate>
    <atom:link href="https://nihaal.me/tags/hardware-security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TLB;DR Reversing TLBs with TLB desynchronization</title>
      <link>https://nihaal.me/post/paper_tlbdr/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://nihaal.me/post/paper_tlbdr/</guid>
      <description>Yesterday, I read an interesting research paper about reverse engineering TLBs using TLB desynchronization. In this post, I&amp;rsquo;ll write briefly about the key ideas and what I found very interesting in the paper.&#xA;You can find the paper here:&#xA;TLB;DR: Enhancing TLB-based Attacks with TLB Desynchronized Reverse Engineering. TLB;DR Source code Reverse engineering CPU internals In the subfield of hardware security that focuses on communicating (covert channels) or leaking (side channels) critical information using timing or storage channels, accurate information about the CPU internals helps create more efficient and reliable channels.</description>
    </item>
  </channel>
</rss>
